#!/bin/sh

. /lib/functions.sh
. /lib/functions/network.sh

if [ "$ACTION" = "remove" ]; then

	delete_rules_by_comment() {
		local table="$1"
		local chain="$2"
		local comment="$3"

		iptables -t "$table" --line-numbers -nL "$chain" 2>/dev/null | \
			sed -e '
				1d;
				1! {
					\#^[0-9]\+ .* /\* '"$comment"' \*/.*$# {
						s/ .*$//;
						G; h;
					}
				};
				$!d;
			' | xargs -n1 iptables -t "$table" -D "$chain" 2>/dev/null
	}

	delete_rules_by_comment nat    nat_reflection_in  "$INTERFACE"
	delete_rules_by_comment nat    nat_reflection_out "$INTERFACE"
	delete_rules_by_comment filter nat_reflection_fwd "$INTERFACE"

elif [ "$ACTION" = "add" ]; then

	prepare_chains() {
		iptables -t nat -N nat_reflection_in 2>/dev/null && {
			iptables -t nat -A prerouting_rule -j nat_reflection_in
		}

		iptables -t nat -N nat_reflection_out 2>/dev/null && {
			iptables -t nat -A postrouting_rule -j nat_reflection_out
		}

		iptables -t filter -N nat_reflection_fwd 2>/dev/null && {
			iptables -t filter -A forwarding_rule -j nat_reflection_fwd
		}
	}

	find_networks() {
		find_networks_cb() {
			local cfg="$1"
			local zone="$2"
			local need_masq="${3:-0}"

			local name
			config_get name "$cfg" name

			local masq
			config_get_bool masq "$cfg" masq 0

			[ "$name" = "$zone" ] && [ "$masq" -ge "$need_masq" ] && {
				local network
				config_get network "$cfg" network

				echo ${network:-$zone}
				return 1
			}
		}

		config_foreach find_networks_cb zone "$@"
	}

	setup_fwd() {
		local cfg="$1"

		local reflection
		config_get_bool reflection "$cfg" reflection 1
		[ "$reflection" == 1 ] || return

		local src
		config_get src "$cfg" src
		[ "$src" == "$ZONE" ] || return
			config_get dest "$cfg" dest "lan"
		local target
		config_get target "$cfg" target DNAT
		[ "$target" = DNAT ] || return

		prepare_chains

			for net in $(find_networks "$dest"); do
				local lannet
				network_get_subnet lannet "$net" || return
				config_get exthost "$cfg" src_dip "$wanip"
								-s $lannet -d $exthost \
							-m comment --comment "$INTERFACE" \
								-s $lannet -d $inthost \
							-m comment --comment "$INTERFACE" \
								-j SNAT --to-source ${lannet%%/*}
								-s $lannet -d $inthost \
							-m comment --comment "$INTERFACE" \

	local is_masq_zone="$(find_networks "$ZONE" 1)"
	[ -n "$is_masq_zone" ] || exit 0

	local extip
	network_get_ipaddr extip "$INTERFACE" || exit 0

